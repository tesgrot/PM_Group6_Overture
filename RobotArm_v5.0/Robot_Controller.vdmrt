class Robot_Controller

instance variables
	angleSensor : AngleSensor;
	motor : Motor;
	e_port : RealPort;
	e_prime_port : RealPort;
	controllerActive : BoolPort;
	
values
	 Kp : real = HardwareInterface`Kp.getValue();
	 Kd : real = HardwareInterface`Kd.getValue();
	 Fc : real = 0.1;
	 Fv : real = 0.05;
	
operations
	
	public Robot_Controller: AngleSensor * Motor * RealPort * RealPort * BoolPort ==> Robot_Controller
	Robot_Controller(a,m,e,e_prime,c) == (
			angleSensor := a;
			motor := m;
			e_port := e;
			e_prime_port := e_prime;
			controllerActive := c;
	);
	
	private loop : () ==> ()
	loop() == cycles(2) (
		
		dcl e :real := 0;
		dcl e_prev : real;
		dcl e_prime : real := 0;
		dcl t_motor : real;
		-- retrieve the first value from Co-SIM
		let angle : real = angleSensor.getAngle() in (
			if controllerActive.getValue() = true then (
				if angle >= HardwareInterface`maxangle.getValue() or angle <= HardwareInterface`minangle.getValue() then(
					motor.setTorqueMotor(0.0);
				)
				else (
					e := HardwareInterface`targetangle.getValue() - angle;
					e_prev := e_port.getValue();
					if e = e_prev then (
						e_prime := e_prime
					) else (
						e_prime := e - e_prime;
					);
					t_motor := Kp * e + Kd * e_prime;
--					if t_motor <= -1.0
--					then (t_motor := -1.0)
--					else if (t_motor >= 1.0)
--					then (t_motor := 1.0);
-- 				the commented section above causes error when imported to INTO-CPS
--					if abs e < 0.01 then t_motor := 0.0;
					motor.setTorqueMotor(t_motor);
					e_port.setValue(e);
					e_prime_port.setValue(e_prime);
				);
			) else (
					motor.setTorqueMotor(0.0);
					e_port.setValue(e);
					e_prime_port.setValue(e_prime);
			);
		);
	);
	
	
thread
	periodic(10E6, 0, 0, 0)(loop);
	
end Robot_Controller