class Robot_Arm

instance variables

	public now : real;
	public env_q	:	real; -- radians, current angle of joint
	public env_motor_state		:	nat; -- 1=active, 0=inactive
	public env_t : real; -- "torque" - specifies the up / down movement

values -- left these here for later

	-- m	: real = 1.2; -- kg, mass of the end effector
	-- g	:	real = -9.81; -- m/second^2, acceleration due to gravity
	-- r	:	real = 0.8; -- m, length of link
	
	public N1 : real = 0;
	public N2 : real = 3.14/2; --MATH`pi/2;
	public M1 : real = N1-0.4;
	public M2 : real = N2+0.4;

operations

	public Robot_Arm: () ==> Robot_Arm
	Robot_Arm() == (
		now := 0;
		env_q	:= 0;
		env_motor_state	:= 0;
		env_t := 0.1; -- ~5deg
	);
	
	-- evolution of angle
	public Step: (real) ==> ()
	Step(delta) == duration (0) (
		
		--COMPUTE NEW VALUES AFTER DELTA TIME UNITS HAVE PASSED
		-- time_factor assumed to be in seconds
		dcl delta_q : real := (env_motor_state * env_t);
		env_q := env_q + delta_q * delta;
		
		-- tg := m * g * r * MATH`cos(q); -- left this here for later
		
		now := now + delta;
		
	)
	-- post 0 <= q and q <= pi/4;

end Robot_Arm